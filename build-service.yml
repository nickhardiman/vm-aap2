# incomplete
# Probably a good idea to use these for install.
# 1. https://github.com/redhat-cop/aap_utilities/tree/devel/roles/aap_setup_download
# 2. https://github.com/redhat-cop/aap_utilities/tree/devel/roles/aap_setup_prepare
# 3. https://github.com/redhat-cop/aap_utilities/tree/devel/roles/aap_setup_install
# Then use these for config. 
# 4. https://github.com/redhat-cop/controller_configuration
# 5. https://github.com/redhat-cop/ah_configuration

- name: build the control node
  hosts: control1.lab.example.com
  become: yes
  gather_facts: no
  tasks: 

# network manager

# firewall
# https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.2/html-single/red_hat_ansible_automation_platform_installation_guide/index#ref-access-control-requirements_planning
  - name: permit traffic in default zone
    ansible.posix.firewalld:
      service: "{{ item }}"
      immediate: yes
      permanent: yes
      state: enabled
    loop:
      - ssh
      - http
      - https
      - postgresql
#
# checks

# packages



- name: build the execution node
  hosts: execution1.lab.example.com
  become: yes
  gather_facts: no
  tasks: 

# network manager

# firewall
# https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.2/html-single/red_hat_ansible_automation_platform_installation_guide/index#ref-access-control-requirements_planning
  - name: permit traffic in default zone
    ansible.posix.firewalld:
      port: 27199/tcp
      immediate: yes
      permanent: yes
      state: enabled
#
# checks

# packages



- name: build the hub node
  hosts: hub1.lab.example.com
  become: yes
  gather_facts: no
  tasks: 

# network manager

# firewall
# https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.2/html-single/red_hat_ansible_automation_platform_installation_guide/index#ref-access-control-requirements_planning
  - name: permit traffic in default zone
    ansible.posix.firewalld:
      service: "{{ item }}"
      immediate: yes
      permanent: yes
      state: enabled
    loop:
      - ssh
      - http
      - https
#
# checks

# packages


# install process
# https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/2.2/html-single/red_hat_ansible_automation_platform_installation_guide/index
# dnf install --enablerepo=ansible-automation-platform-2.2-for-rhel-9-x86_64-rpm ansible-automation-platform-installer
# subscription-manager repos --enable ansible-automation-platform-2.2-for-rhel-9-x86_64-rpms
# install from control1
# control1
# copy setup files to /opt/ansible-automation-platform/installer/
# dnf install ansible-automation-platform-installer
#
# create root keys - ssh-keygen
# copy id_rsa.pub to .ssh/authorized keys
# hub1
# execution1
# root access to the other machines
# copy id_rsa.pub to .ssh/authorized keys
# control1
# check access, auth, DNS
# ssh control1.lab.example.com
# ssh hub1.lab.example.com
# ssh execution1.lab.example.com
# cd /opt/ansible-automation-platform/installer/
# copy inventory 
# change registry_username and registry_password in inventory
# check registry account - podman login registry.redhat.io
# ./setup.sh
# get a subscription manifest
# https://access.redhat.com/documentation/en-us/reference_architectures/2021/html-single/deploying_ansible_automation_platform_2.1/index#sub_manifest
#
